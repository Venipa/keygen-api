x-default-environment:
  &defaultEnv
  CADDY_HOSTS: ${KEYGEN_HOST}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  REDIS_URL: "redis://redis:6379"
  SECRET_KEY_BASE: ${SECRET_KEY_BASE}
  ENCRYPTION_DETERMINISTIC_KEY: ${ENCRYPTION_DETERMINISTIC_KEY}
  ENCRYPTION_PRIMARY_KEY: ${ENCRYPTION_PRIMARY_KEY}
  ENCRYPTION_KEY_DERIVATION_SALT: ${ENCRYPTION_KEY_DERIVATION_SALT}
  KEYGEN_EDITION: CE
  KEYGEN_MODE: singleplayer
  KEYGEN_ACCOUNT_ID: ${KEYGEN_ACCOUNT_ID}
  KEYGEN_ADMIN_EMAIL: ${KEYGEN_ADMIN_EMAIL}
  KEYGEN_ADMIN_PASSWORD: ${KEYGEN_ADMIN_PASSWORD}
  KEYGEN_HOST: ${KEYGEN_HOST}
  DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"

services:
  setup:
    profiles: [ "setup" ]
    image: keygen/api:latest
    env_file:
      - .env
    environment:
      <<: *defaultEnv
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
    command: >
      sh -c "
        until pg_isready -h postgres -U ${POSTGRES_USER}; do
          echo 'Waiting for PostgreSQL...'
          sleep 1
        done
        bundle exec rails keygen:setup
      "
    depends_on: [ postgres ]
    tty: true
    stdin_open: true

  postgres:
    image: postgres:9.6
    environment:
      <<: *defaultEnv
      DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  web:
    image: keygen/api:latest
    networks:
      - default
      - web_network
    command: "web"
    environment:
      <<: *defaultEnv
    volumes:
      - keygen:/etc/keygen
    depends_on:
      - postgres
      - redis

  worker:
    image: keygen/api:latest
    command: "worker"
    env_file:
      - .env
    environment:
      <<: *defaultEnv
    volumes:
      - keygen:/etc/keygen
    depends_on:
      - postgres
      - redis

  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80"
      - "443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    env_file:
      - .env
    environment:
      <<: *defaultEnv
      CADDY_HOSTS: "${CADDY_HOSTS:-$KEYGEN_HOST}"
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile"]
    depends_on:
      - web
    networks:
      - default
      - web_network

networks:
  web_network:
    name: web_network

volumes:
  keygen:
  postgres:
  redis:
  caddy_data:
  caddy_config:
